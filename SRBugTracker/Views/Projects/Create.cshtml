@model SRBugTracker.ViewModels.CreateProjectViewModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create Project</h2>
<hr />

<form asp-action="Create" onsubmit="createUsersArray()">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description" class="control-label"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="row my-2">
        <div class="col"><h4>Project Members</h4></div>
        <div class="col">
            <div class="input-group">
                <input id="emailToAdd" class="form-control form-control-sm" type="email" placeholder="Add user's email">
                <div class="input-group-append">
                    <button class="btn btn-primary btn-sm" type="button" id="button-addon2" onclick="addRow()">+</button>
                </div>
            </div>
        </div>
        <div class="col">
            <input class="form-control form-control-sm" type="text" placeholder="Filter" id="membersFilterInput">
        </div>
    </div>

    <table class="table table-sm table-hover table-light" id="membersTable">
        <thead>
            <tr>
                <th>User Email</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@User.Identity.Name <input type="hidden" name="" value="@User.Identity.Name" /></td>
                <td>
                    <a class="btn btn-sm btn-icon-only float-right" onclick="removeRow.call(this)">
                        <i class="fas fa-trash-alt text-danger"></i>
                    </a>
                </td>
            </tr>
        </tbody>
    </table>

    <div class="form-group mt-4 text-right">
        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
        <input type="submit" value="Create" class="btn btn-primary" id="saveButton" />
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">
        $(document).ready(function () {
            $('.table').DataTable({
                dom: "rt",
                scrollY: "50vh",
                scrollCollapse: true,
                order: [],
                columnDefs: [{
                    orderable: false,
                    targets: -1,
                }],
            });
            $('.table').DataTable().columns.adjust().draw();
        });

        $('#emailToAdd').keypress(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                addRow();
                return false;
            }
        });

        function emailIsValid(email) {
            return /\S+@@\S+\.\S+/.test(email);
        }

        function addRow() {
            var emailtoadd = $('#emailToAdd').val();

            function isDuplicate() {
                var result = false;
                var existingEmails = $('#membersTable tr td:nth-child(1)');
                existingEmails.each(function (key, element) {
                    if (emailtoadd == element.textContent.trim()) {
                        result = true;
                        return false;
                    }
                });
                return result;
            }

            if (emailIsValid(emailtoadd) && !isDuplicate()) {
                $('#membersTable').DataTable().row.add([`${emailtoadd} <input type="hidden" name="" value="${emailtoadd}" />`, '<a class="btn btn-sm btn-icon-only float-right" onclick="removeRow.call(this)"><i class="fas fa-trash-alt text-danger"></i></a>']).draw();
                $('#emailToAdd').val("");
            }
        }

        function removeRow() {
            $('#membersTable').DataTable().row($(this).parents('tr')).remove().draw();
        }

        $('#membersFilterInput').keyup(function () {
            $('#membersTable').DataTable().search($(this).val()).draw();
        });

        function createUsersArray() {
            var inputs = $('#membersTable tr td:nth-child(1) input');

            inputs.each(function (key, element) {
                element.setAttribute("name", `Members[${key}]`);
            })
        }
    </script>
}
